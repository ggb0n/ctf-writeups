from Crypto.PublicKey import RSA
import os

e = 65537
n = 23476345782117384360316464293694572348021858182972446102249052345232474617239084674995381439171455360619476964156250057548035539297034987528920054538760455425802275559282848838042795385223623239088627583122814519864252794995648742053597744613214146425693685364507684602090559028534555976544379804753832469034312177224373112610128420211922617372377101405991494199975508780694545263130816110474679504768973743009441005450839746644168233367636158687594826435608022717302508912914016439961300625816187681031915377565087756094989820015507950937541001438985964760705493680314579323085217869884649720526665543105616470022561

pubkey = RSA.construct((n, e))
with open('pubkey.pem', 'wb') as f:
    f.write(pubkey.exportKey())

os.system("cat pubkey.pem | openssl pkey -pubin -outform der | openssl dgst -sha256 -binary | xxd -p | tr -d '\n'; echo")


# https://stackoverflow.com/questions/36163093/how-do-we-generate-a-base64-encoded-sha256-hash-of-subjectpublickeyinfo-of-an-x
# openssl x509 -in cert.crt -pubkey -noout | openssl pkey -pubin -outform der | openssl dgst -sha256 -binary | xxd -p | tr -d '\n' && echo

# Test on:
# openssl s_client -connect www.cryptohack.org:443 2>/dev/null </dev/null |  sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' > cert.crt

# https://crt.sh/?spkisha256=9db105389dd81cfb4b59ff1a4c0670c630b1800e542323111d5c5cb9af72031f
