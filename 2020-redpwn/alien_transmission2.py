from z3 import *
from collections import Counter
import string

# def most_common(lst):
#     data = Counter(lst)
#     return data.most_common(1)[0][0]

# f = open('encrypted.txt')
# letters = [int(n) for n in f.read().split()]

# xored = [0]*399
# for i in range(399):
#     letter = letters[i::399]
#     xored[i] = most_common(letter) ^ 481
# print(xored)
xored = [55, 71, 26, 0, 120, 0, 108, 23, 88, 93, 59, 57, 0, 71, 106, 0, 55, 89, 1, 51, 18, 0, 0, 45, 6, 20, 86, 111, 26, 12, 108, 110, 83, 110, 6, 93, 69, 106, 55, 64, 4, 85, 55, 6, 65, 80, 23, 91, 59, 43, 89, 6, 0, 18, 89, 67, 0, 43, 43, 0, 7, 51, 83, 91, 80, 66, 93, 67, 106, 110, 65, 55, 71, 55, 87, 4, 45, 65, 28, 108, 55, 1, 95, 5, 88, 93, 22, 108, 22, 0, 0, 0, 0, 2, 106, 57, 69, 26, 6, 43, 106, 91, 87, 92, 8, 12, 108, 67, 6, 120, 65, 55, 69, 93, 108, 43, 14, 2, 45, 0, 71, 60, 88, 90, 8, 57, 89, 6, 45, 71, 79, 4, 106, 43, 28, 91, 108, 57, 4, 65, 86, 68, 49, 12, 107, 93, 83, 55, 71, 26, 2, 18, 106, 43, 28, 91, 108, 106, 85, 82, 66, 91, 16, 0, 89, 1, 51, 18, 0, 2, 71, 108, 83, 93, 108, 43, 93, 0, 60, 86, 95, 22, 106, 69, 106, 55, 64, 4, 87, 93, 108, 6, 91, 20, 106, 106, 71, 11, 3, 49, 2, 110, 67, 0, 43, 43, 0, 5, 89, 57, 28, 91, 65, 108, 18, 6, 60, 68, 6, 87, 0, 87, 4, 45, 65, 28, 110, 93, 107, 24, 14, 91, 108, 71, 0, 68, 5, 49, 16, 55, 2, 106, 57, 69, 26, 4, 65, 0, 28, 92, 95, 57, 93, 0, 17, 3, 73, 81, 0, 69, 93, 108, 43, 14, 0, 71, 106, 0, 55, 91, 107, 89, 85, 11, 3, 28, 87, 120, 4, 106, 43, 28, 91, 110, 83, 110, 6, 93, 71, 0, 93, 7, 15, 86, 6, 87, 45, 2, 18, 106, 43, 28, 89, 6, 0, 18, 89, 65, 106, 65, 108, 11, 4, 2, 2, 55, 2, 71, 108, 83, 93, 110, 65, 55, 71, 55, 85, 110, 71, 6, 23, 111, 6, 80, 51, 87, 93, 108, 6, 91, 22, 0, 0, 0, 0, 0, 0, 83, 2, 17, 5, 26, 59, 55, 5, 89, 57, 28, 91, 67, 6, 120, 65, 55, 71, 55, 6, 108, 5, 1, 28, 81, 43, 110, 93, 107, 24, 14, 89, 6, 45, 71, 79, 6, 0, 65, 91, 80, 111, 8, 85, 45, 4, 65, 0, 28, 92, 93, 83]

key1 = [BitVec("k1_{}".format(i), 9) for i in string.ascii_lowercase]
key2 = [BitVec("k2_{}".format(i), 9) for i in string.ascii_lowercase]

s = Solver()

alphabet = (
    string.ascii_lowercase +
    string.ascii_uppercase +
    string.digits +
    "_'.-"
)

for i, x in enumerate(xored):
    s.add(key1[i % 21] ^ key2[i % 19] == x)

for i in range(21):
    s.add(Or(
        [key1[i] == ord(c) for c in alphabet]
    ))
    if i < 19:
        s.add(Or(
            [key2[i] == ord(c) for c in alphabet]
        ))

print(s.check())
m = s.model()

out = sorted([(d, m[d]) for d in m], key=lambda x: str(x[0]))

print(out)
print([o[1].as_long() for o in out])

print("flag{" + "".join([chr(o[1].as_long()) for o in out]) + "}")
